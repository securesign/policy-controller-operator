apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: policy-controller-operator
    app.kubernetes.io/managed-by: kustomize
  name: system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: policy-controller-operator
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      securityContext:
        runAsNonRoot: true
      initContainers:
      - name: apply-vap
        image: registry.k8s.io/kubectl:v1.30.0
        command: ["kubectl"]
        args: ["apply", "-f", "/vap/validating-policy.yaml"]
        volumeMounts:
        - name: vap-yaml
          mountPath: /vap
      volumes:
      - name: vap-yaml
        configMap:
          name: policycontroller-vap
      containers:
      - args:
          - --leader-elect
          - --leader-election-id=policy-controller-operator
          - --health-probe-bind-address=:8081
        image: controller:latest
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: policycontroller-vap
data:
  validating-policy.yaml: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingAdmissionPolicy
    metadata:
      name: policycontroller-namespace-lock
    spec:
      failurePolicy: Fail
      matchConstraints:
        resourceRules:
        - apiGroups: ["rhtas.charts.redhat.com"]
          apiVersions: ["v1alpha1"]
          resources: ["policycontrollers"]
          operations: ["CREATE","UPDATE"]
      validations:
      - expression: "request.namespace == 'policy-controller-operator'"
        message: "PolicyController resources may only be created in the policy-controller-operator namespace."
    ---
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingAdmissionPolicyBinding
    metadata:
      name: policycontroller-namespace-lock
    spec:
      policyName: policycontroller-namespace-lock
      validationActions: [Deny]
      matchResources:
        namespaceSelector: {}
