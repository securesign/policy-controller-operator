policy-controller:
  cosign:
    # add the values in base64 encoded
    cosignPub: ""
    webhookName: "policy.rhtas.com"
    webhookTimeoutSeconds: {}
    # mutating: 10
    # validating: 10
  installCRDs: true
  imagePullSecrets: []
  loglevel: info
  webhook:
    customLabels: {}
    configData: {}
    replicaCount: 1
    name: webhook
    image:
      repository: registry.redhat.io/rhtas/policy-controller-rhel9
      version: sha256:ea4ac2b005571bc28270f8420dff30a0f02381bcd78153e1014f9006d1a17609
      pullPolicy: IfNotPresent
    env: {}
    envFrom: {}
    # configmaps:
    #   - mycm1
    #   - mycm2
    # secrets:
    #   - mys1
    #   - mys2
    extraArgs:
      webhook-name: policy.rhtas.com
      mutating-webhook-name: defaulting.clusterimagepolicy.rhtas.com
      validating-webhook-name: validating.clusterimagepolicy.rhtas.com
      disable-tuf: true
    resources:
      limits:
        cpu: 200m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      enabled: false
      runAsUser: 65532
    failurePolicy: Fail
    podAnnotations: {}
    podSecurityContext:
      enabled: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsUser: 1000
      capabilities:
        drop:
          - ALL
    # The default affinity config is to spread the webhook across nodes.
    # See charts/policy-controller/templates/webhook/deployment_webhook.yaml#L39 for more info.
    affinity: {}
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
      # maxUnavailable: 3
    serviceAccount:
      annotations: {}
      create: true
      name: ""
    service:
      annotations:
        helm.sh/resource-policy: keep
      type: ClusterIP
      port: 443
      # For nodeport, specify the following:
      #   type: NodePort
      #   nodePort: <port-number>
    volumeMounts: []
    volumes: []
    namespaceSelector:
      matchExpressions:
        - key: policy.rhtas.com/include
          operator: In
          values: ["true"]
    registryCaBundle: {}
    webhookNames:
      defaulting: "defaulting.clusterimagepolicy.rhtas.com"
      validating: "validating.clusterimagepolicy.rhtas.com"
    webhookTimeoutSeconds: {}
    # defaulting: 10
    # validating: 10
    priorityClass: ""
    automountServiceAccountToken: true
  leasescleanup:
    priorityClass: ""
    image:
      repository: registry.redhat.io/openshift4/ose-cli@sha256
      version: 2bc6e85e12269f8fe42bebcc69587714715bcf69c60a541096a07683cc158fa5
      pullPolicy: IfNotPresent
    resources:
      limits:
        cpu: ""
        memory: ""
      requests:
        cpu: ""
        memory: ""
    podSecurityContext:
      enabled: false
      # allowPrivilegeEscalation: false
      # readOnlyRootFilesystem: true
      # runAsUser: 1000
      # capabilities:
      #   drop:
      #     - ALL
    automountServiceAccountToken: true
  ## common node selector for all the pods
  commonNodeSelector: {}
  #  key1: value1
  #  key2: value2

  ## common tolerations for all the pods
  commonTolerations: []
  # - key: "key"
  #   operator: "Equal"
  #   value: "value"
  #   effect: "NoSchedule"

  ## This will set some annotations in config maps and secrets. Use case: Disable versioning to deploy helm chart using spinnaker
  commonAnnotations: {}
  #  strategy.spinnaker.io/versioned: "false"
  #  key2: value2

  ## serviceMonitor makes policy controller metrics discoverable to prometheus
  serviceMonitor:
    enabled: false
